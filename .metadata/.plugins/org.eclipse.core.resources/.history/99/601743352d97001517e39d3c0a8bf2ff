package top.flyfire.degetation.net.tcp.c2c;

import top.flyfire.degetation.net.StreamFactory;

public class C2CStrmFct implements StreamFactory {
	
	public static final byte[] END = {-1,-1,-1,-1,-1,-1};
	
	public static final byte END_CELL = -1;
	
	public static final byte[] HD_BD_SEP = {0,0,0,0,0,0};
	
	public static final byte HD_BD_SEP_CELL = 0;
	
	public static boolean isNull(byte[] by){
		if(by.length==12
				&&by[0]==HD_BD_SEP_CELL&&by[1]==HD_BD_SEP_CELL&&by[2]==HD_BD_SEP_CELL&&by[3]==HD_BD_SEP_CELL&&by[4]==HD_BD_SEP_CELL&&by[5]==HD_BD_SEP_CELL
				&&by[6]==END_CELL&&by[7]==END_CELL&&by[8]==END_CELL&&by[9]==END_CELL&&by[10]==END_CELL&&by[11]==END_CELL){
			return true;
		}else{
			return false;
		}
	}
	
	private byte[] byteStore = new byte[0];

	@Override
	public void build(byte[] by) {
		// TODO Auto-generated method stub
		if(C2CStrmFct.isNull(by))return;
		byte[] temp = new byte[this.byteStore.length+by.length];
		System.arraycopy(this.byteStore, 0, temp, 0, this.byteStore.length);
		System.arraycopy(by, 0, temp, this.byteStore.length, by.length);
		this.byteStore = temp;
		this.readAsBuffer();
	}
	
	public void readAsBuffer(){
		while(this.byteStore.length>=12){
			
			for(int i = 6;i<this.byteStore.length-6;i++){
				
			}
		}
	}


}
